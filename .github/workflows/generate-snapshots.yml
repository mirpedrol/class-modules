name: generate-snapshots
run-name: generate-snapshots (automated)
on:
  issue_comment:
    types: [created]

jobs:
  nf-test-changes:
    name: nf-test-changes

    outputs:
      matrix: ${{ steps.zip.outputs.matrix }}

    # Only run if comment is on a PR with the main repo, and if it contains the magic keywords
    if: >
      contains(github.event.comment.html_url, '/pull/') &&
      contains(github.event.comment.body, '@bot generate snapshots') &&
      github.repository == 'mirpedrol/class-modules'
    runs-on: ubuntu-latest
    steps:
      # indication that the comment was seen
      - name: React on comment
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: eyes

      # Action runs on the issue comment, so we don't get the PR by default
      # Use the gh cli to check out the PR
      - name: Checkout Pull Request
        run: gh pr checkout ${{ github.event.issue.number }}

      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4

      - name: Get PR info
        id: get_pr_info
        run: |
          PR_INFO=$(gh pr view ${{ github.event.issue.number }} --json baseRefName,headRefName,baseRefOid)
          BASE_SHA=$(echo "$PR_INFO" | jq -r '.baseRefOid')
          echo "base_sha=$BASE_SHA" >> $GITHUB_ENV

      - name: List nf-test files
        id: list
        uses: adamrtalbot/detect-nf-test-changes@de3c3c8e113031b4f15a3c1104b5f135e8346997 # v0.0.6
        with:
          head: ${{ github.sha }}
          base: ${{ env.base_sha }}
          n_parents: 0

      - name: Select subworkflows
        id: outputs
        run: |
          echo subworkflows=$(echo '${{ steps.list.outputs.components }}' | jq '. | map(select(contains("subworkflows"))) | map(gsub("subworkflows/mirpedrol/"; "")) | map(gsub("/tests/main.nf.test"; ""))') >> $GITHUB_OUTPUT

      - name: debug
        run: |
          echo ${{ steps.outputs.outputs.subworkflows }}

      - name: Zip paths and subworkflows
        id: zip
        run: |
          paths=$(echo '${{ steps.list.outputs.components }}' | jq '.')
          subworkflows=$(echo '${{ steps.outputs.outputs.subworkflows }}' | jq '.')
          profiles='["conda", "docker", "singularity"]'
          profiles=$(echo $profiles | jq '.')
          echo matrix=$(
            jq -n --argjson paths "$paths" --argjson subworkflows "$subworkflows" --argjson profiles "$profiles" '
              [range(0; ($paths|length)) as $i
                | $profiles[] as $profile
                | {
                    path: $paths[$i],
                    subworkflow: $subworkflows[$i],
                    profile: $profile
                  }
              ]
              | map(select(.profile != "conda" or .subworkflow != "msa_alignment"))
            '
          ) >> $GITHUB_OUTPUT
      # Filter out conda failing testes with a map

  generate-snapshots:
    name: generate-snapshots
    needs: nf-test-changes
    runs-on: ubuntu-latest
    if: ( needs.nf-test-changes.outputs.matrix != '[]' )

    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.nf-test-changes.outputs.matrix) }}

    env:
      NXF_ANSI_LOG: false
      NFTEST_VER: "0.8.4"

    steps:
      # Action runs on the issue comment, so we don't get the PR by default
      # Use the gh cli to check out the PR
      - name: Checkout Pull Request
        run: gh pr checkout ${{ github.event.issue.number }}

      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4

      - uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Install nf-core tools development version
        run: python -m pip install --upgrade --force-reinstall git+https://github.com/nf-core/tools.git@dev

      - name: Setup Nextflow
        uses: nf-core/setup-nextflow@v2

      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5
        with:
          python-version: "3.11"

      - name: Install nf-test
        uses: nf-core/setup-nf-test@v1
        with:
          version: "0.9.2"
          install-pdiff: true

      - name: Setup apptainer
        if: matrix.profile == 'singularity'
        uses: eWaterCycle/setup-apptainer@main

      - name: Set up Singularity
        if: matrix.profile == 'singularity'
        shell: bash
        run: |
          mkdir -p ${{ github.workspace }}/.singularity
          mkdir -p ${{ github.workspace }}/.singularity

      - name: Conda setup
        if: matrix.profile == 'conda'
        uses: conda-incubator/setup-miniconda@d2e6a045a86077fb6cad6f5adf368e9076ddaa8d # v3
        with:
          auto-update-conda: true
          conda-solver: libmamba
          conda-remove-defaults: true

      - name: Install Python dependencies
        run: python -m pip install --upgrade pip cryptography

      # Install the subworkflow to a pipeline
      - name: create a pipeline
        run: |
          mkdir create-test-wf
          cd create-test-wf
          nf-core --log-file log.txt pipelines create -n testpipeline -d "This pipeline is for testing subworkflows" -a "Me"

      - name: update resource limits
        run: |
          cd create-test-wf
          cat <<EOF >> nf-core-testpipeline/tests/nextflow.config
          process {
              withName: '.*'{
                cpus = 2
                memory = 15.GB
                time = 2.h
              }
          }
          EOF

      - name: Install subworkflow ${{ matrix.subworkflow }}
        run: |
          cd create-test-wf/nf-core-testpipeline
          PR_BRANCH=$(gh pr view ${{ github.event.issue.number }} --json headRefName --jq '.headRefName')
          nf-core subworkflows --git-remote https://github.com/mirpedrol/class-modules --branch "$PR_BRANCH" install ${{ matrix.subworkflow }}

      - name: run pipeline nf-test and generate snapshot
        shell: bash
        env:
          NFT_DIFF: "pdiff"
          NFT_DIFF_ARGS: "--line-numbers --width 120 --expand-tabs=2"
        run: |
          cd create-test-wf/nf-core-testpipeline
          PROFILE=${{ matrix.profile }}
          NFT_WORKDIR=~

          nf-test test \
            --profile=${{ matrix.profile }} \
            --verbose \
            ${{ matrix.path }}

          cp ./${{ matrix.path }}.snap ${{ github.workspace }}/${{ matrix.path }}.snap

      - name: Commit and push changes
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git config push.default upstream
          git add ${{ github.workspace }}/${{ matrix.path }}.snap
          git status
          git commit -m "Generate snapshot for ${{ matrix.subworkflow }} subworkflow"
          git push
